name: Deploy to Lightsail

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
      
    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile
      
    - name: Generate Prisma client
      run: pnpm run db-generate
      
    - name: Build application
      run:  NODE_OPTIONS="--max-old-space-size=2048" pnpm run build

    - name: Deploy to Lightsail
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Navigate to app directory
          cd /home/bitnami/schoolos-backend
          
          # Pull latest changes
          git pull origin main
          
          # Install dependencies
          pnpm install --no-frozen-lockfile
          
          # Generate Prisma client
          pnpm run db-generate
          
          # Build the application
          NODE_OPTIONS="--max-old-space-size=2048" pnpm run build
          
          # Run database migrations
          npx prisma migrate deploy
          
          # Restart the application with PM2
          pm2 restart schoolos-backend || pm2 start dist/src/main.js --name schoolos-backend
          
          # Save PM2 configuration
          pm2 save
          
          echo "Deployment completed successfully!"
